{"version":3,"file":"static/webpack/static/development/pages/gallery.js.f3e5475a4fa2526ee37d.hot-update.js","sources":["webpack:///./components/GalleryGrid.js"],"sourcesContent":["import React, { useState, useRef } from 'react'\nimport { render } from 'react-dom'\nimport { useTransition, useSpring, useChain, config } from 'react-spring'\nimport { animated } from 'react-spring'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst Item = styled(animated.div)`\n  width: 100%;\n  height: 100%;\n  background: white;\n  border-radius: 5px;\n  will-change: transform, opacity;\n`\n\nexport function GalleryGrid ({ photos }) {\n  const [open, set] = useState(false)\n\n  const springRef = useRef()\n  const { size, opacity, ...rest } = useSpring({\n    ref: springRef,\n    config: config.stiff,\n    from: { size: '20%', background: 'hotpink' },\n    to: { size: open ? '100%' : '20%', background: open ? 'white' : 'hotpink' }\n  })\n\n  const transRef = useRef()\n  const transitions = useTransition(open ? photos : [], item => item.name, {\n    ref: transRef,\n    unique: true,\n    trail: 400 / photos.length,\n    from: { opacity: 0, transform: 'scale(0)' },\n    enter: { opacity: 1, transform: 'scale(1)' },\n    leave: { opacity: 0, transform: 'scale(0)' }\n  })\n\n  // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n  useChain(open ? [springRef, transRef] : [transRef, springRef], [\n    0,\n    open ? 0.1 : 0.6\n  ])\n\n  return (\n    <>\n      {transitions.map(({ item, key, props }) => (\n        <Item key={key} style={{ ...props, background: item.css }} />\n      ))}\n    </>\n  )\n}\n\nexport default GalleryGrid\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAJA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AACA;AASA;AAKA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAEA;;;;A","sourceRoot":""}