{"version":3,"file":"static/webpack/static/development/pages/index.js.9811b370477ff66f24e5.hot-update.js","sources":["webpack:///./components/MusicPlayer.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PlayIcon from './icons/playIcon'\nimport MusicIcon from './icons/musicIcon'\nimport NextIcon from './icons/nextIcon'\nimport BackIcon from './icons/backIcon'\nimport PauseIcon from './icons/pauseIcon'\nimport { Howl, Howler } from 'howler'\n\nclass MusicPlayer extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentIndex: 0,\n      playing: false,\n      tracks: [],\n      currentTrack: null\n    }\n  }\n\n  formatTime = secs => {\n    var minutes = Math.floor(secs / 60) || 0\n    var seconds = secs - minutes * 60 || 0\n\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n  }\n\n  componentDidMount () {\n    const progress = document.querySelector('.slider_progress')\n    const progressBall = document.querySelector('.slider_handle')\n    const timer = document.querySelector('.playback_timeline_end-time')\n    const self = this\n    const howlLoadedSongs = this.props.songs.map(song => {\n      const sound = new Howl({\n        src: [song.fields.trackUrl.fields.file.url],\n        onplay: arg => {\n          let count = 0\n          const timerInterval = setInterval(() => {\n            count++\n\n            progress.style.width = `${count}px`\n            progressBall.style.left = `${count}px`\n          }, 1000)\n\n          self.setState(\n            {\n              playing: true\n            },\n            () => {\n              timer.innerHTML = `${self.formatTime(\n                Math.round(self.state.currentTrack.sound.duration())\n              )}`\n            }\n          )\n        },\n        onend: function () {\n          self.setState({\n            playing: false\n          })\n        },\n        onpause: function () {\n          self.setState({\n            playing: false\n          })\n        },\n        onstop: function () {\n          self.setState({\n            playing: false\n          })\n        }\n      })\n      return {\n        ...song,\n        sound: sound\n      }\n    })\n\n    this.setState({\n      tracks: howlLoadedSongs,\n      currentTrack: howlLoadedSongs[this.state.currentIndex]\n    })\n  }\n\n  playCurrentTrack = e => {\n    e.preventDefault()\n    const { currentTrack } = this.state\n\n    if (currentTrack) {\n      currentTrack.sound.play()\n    }\n  }\n  nextSong = () => {}\n  previousSong = () => {}\n  pause = e => {\n    e.preventDefault()\n    const { currentTrack } = this.state\n\n    if (currentTrack) {\n      currentTrack.sound.pause()\n    }\n  }\n  render () {\n    const currentTrack = this.state.currentTrack\n      ? this.state.currentTrack\n      : this.props.currentTrack\n    return (\n      <Fragment>\n        {currentTrack ? (\n          <div className='mini-player'>\n            <div className='track_info_wrapper'>\n              <div className='track_info'>\n                <div\n                  className='thumb'\n                  style={{\n                    backgroundImage: `url(${\n                      currentTrack\n                        ? currentTrack.fields.featuredImage.fields.file.url\n                        : this.props.currentTrack.fields.featuredImage.fields\n                          .file.url\n                    })`\n                  }}\n                />\n                <div className='info'>\n                  <div className='title'>{currentTrack.fields.title}</div>\n                  <div className='artist'>Pye Luis</div>\n                </div>\n              </div>\n            </div>\n            <div className='mini-player_btn_wrapper'>\n              <BackIcon />\n              {this.state.playing ? (\n                <PauseIcon onClick={this.pause} />\n              ) : (\n                <PlayIcon onClick={this.playCurrentTrack} />\n              )}\n\n              <NextIcon />\n              <MusicIcon onClick={this.props.toggleFullPlayer} />\n            </div>\n          </div>\n        ) : null}\n\n        <div className='player' id='player'>\n          <div className='playback_wrapper'>\n            <div className='playback_blur' />\n            <div\n              className='playback_thumb'\n              style={{\n                backgroundImage: `url(${\n                  currentTrack\n                    ? currentTrack.fields.featuredImage.fields.file.url\n                    : null\n                })`\n              }}\n            />\n            <div className='playback_info'>\n              <div className='title'>\n                {currentTrack ? currentTrack.fields.title : null}\n              </div>\n              <div className='artist'>Pye Luis</div>\n            </div>\n            <div className='playback_btn_wrapper'>\n              <i className='btn-prev fa fa-step-backward' aria-hidden='true' />\n              <div className='btn-switch'>\n                <i className='btn-play fa fa-play' aria-hidden='true' />\n                <i className='btn-pause fa fa-pause' aria-hidden='true' />\n              </div>\n              <i className='btn-next fa fa-step-forward' aria-hidden='true' />\n            </div>\n            <div className='playback_timeline'>\n              <div className='playback_timeline_start-time'>00:00</div>\n              <div className='playback_timeline_slider'>\n                <div className='slider_base' />\n                <div className='slider_progress' />\n                <div className='slider_handle' />\n              </div>\n              <div className='playback_timeline_end-time'>03:11</div>\n            </div>\n          </div>\n          <div className='list_wrapper'>\n            <ul className='list'>\n              {this.props.songs.map((song, i) => (\n                <li className='list_item selected' key={i}>\n                  <div\n                    className='thumb'\n                    style={{\n                      backgroundImage: `url(${\n                        song.fields.featuredImage.fields.file.url\n                      })`\n                    }}\n                  />\n                  <div className='info'>\n                    <div className='title'>{song.fields.title}</div>\n                    <div className='artist'>Pye Luis</div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default MusicPlayer\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AAEA;AACA;AACA;AAhBA;AA0EA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAjFA;AACA;AADA;AACA;AADA;AAoFA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAzFA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AADA;AAIA;AAGA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AApCA;AAsCA;AAEA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;;;AAoqBA;;;;AAjMA;AACA;AAmMA;;;;A","sourceRoot":""}