{"version":3,"file":"static/webpack/static/development/pages/index.js.59329568742165ad8049.hot-update.js","sources":["webpack:///./components/MusicPlayer.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PlayIcon from './icons/playIcon'\nimport MusicIcon from './icons/musicIcon'\nimport NextIcon from './icons/nextIcon'\nimport BackIcon from './icons/backIcon'\nimport PauseIcon from './icons/pauseIcon'\nimport { Howl, Howler } from 'howler'\n\nclass MusicPlayer extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentIndex: 0,\n      playing: false,\n      tracks: [],\n      currentTrack: null,\n      time: 0,\n      start: 0\n    }\n  }\n\n  formatTime = secs => {\n    var minutes = Math.floor(secs / 60) || 0\n    var seconds = secs - minutes * 60 || 0\n\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n  }\n\n  computeProportionalWidth = (playbackTimeline, time, duration) => {\n    const playbackWidth = playbackTimeline.offsetWidth\n    const ratio = time / duration \n    return `${playbackWidth * ratio}`\n  }\n\n  startTimer = ({ progress, playbackTimeline, progressBall, startTime, endTime }) => {\n    let count = 0\n    this.setState({\n      playing: true,\n      time: this.state.time,\n      start: this.state.time\n    })\n    this.timer = setInterval(\n      () =>\n        this.setState(\n          {\n            time: count++\n          },\n          () => {\n            const currentProgress = this.computeProportionalWidth(playbackTimeline, this.state.time, this.state.currentTrack.sound.duration())\n            progress.style.width = `${currentProgress}%`\n            progressBall.style.left = `${currentProgress}px`\n          }\n        ),\n      1\n    )\n  }\n\n  stopTimer = () => {\n    this.setState({ playing: false })\n    clearInterval(this.timer)\n  }\n  resetTimer = () => {\n    this.setState({ time: 0, playing: false })\n  }\n\n  componentDidMount () {\n    const elements = {\n      progress: document.querySelector('.slider_progress'),\n      playbackTimeline: document.querySelector('.playback_timeline_slider'),\n      progressBall: document.querySelector('.slider_handle'),\n      startTime: document.querySelector('.playback_timeline_start-time'),\n      endTime: document.querySelector('.playback_timeline_end-time')\n    }\n\n    const self = this\n    const howlLoadedSongs = this.props.songs.map(song => {\n      const sound = new Howl({\n        src: [song.fields.trackUrl.fields.file.url],\n        onplay: arg => {\n          self.startTimer(elements)\n        },\n        onend: function () {\n          self.stopTimer()\n          self.resetTimer()\n        },\n        onpause: function () {\n          self.stopTimer()\n        },\n        onstop: function () {\n          self.stopTimer()\n          self.resetTimer()\n        }\n      })\n      return {\n        ...song,\n        sound: sound\n      }\n    })\n\n    this.setState({\n      tracks: howlLoadedSongs,\n      currentTrack: howlLoadedSongs[this.state.currentIndex]\n    })\n  }\n\n  playCurrentTrack = e => {\n    e.preventDefault()\n    const { currentTrack } = this.state\n\n    if (currentTrack) {\n      currentTrack.sound.play()\n    }\n  }\n  nextSong = () => {}\n  previousSong = () => {}\n  pause = e => {\n    e.preventDefault()\n    const { currentTrack } = this.state\n\n    if (currentTrack) {\n      currentTrack.sound.pause()\n    }\n  }\n  render () {\n    const currentTrack = this.state.currentTrack\n      ? this.state.currentTrack\n      : this.props.currentTrack\n    return (\n      <Fragment>\n        {currentTrack ? (\n          <div className='mini-player'>\n            <div className='track_info_wrapper'>\n              <div className='track_info'>\n                <div\n                  className='thumb'\n                  style={{\n                    backgroundImage: `url(${\n                      currentTrack\n                        ? currentTrack.fields.featuredImage.fields.file.url\n                        : this.props.currentTrack.fields.featuredImage.fields\n                          .file.url\n                    })`\n                  }}\n                />\n                <div className='info'>\n                  <div className='title'>{currentTrack.fields.title}</div>\n                  <div className='artist'>Pye Luis</div>\n                </div>\n              </div>\n            </div>\n            <div className='mini-player_btn_wrapper'>\n              <BackIcon />\n              {this.state.playing ? (\n                <PauseIcon onClick={this.pause} />\n              ) : (\n                <PlayIcon onClick={this.playCurrentTrack} />\n              )}\n\n              <NextIcon />\n              <MusicIcon onClick={this.props.toggleFullPlayer} />\n            </div>\n          </div>\n        ) : null}\n\n        <div className='player' id='player'>\n          <div className='playback_wrapper'>\n            <div className='playback_blur' />\n            <div\n              className='playback_thumb'\n              style={{\n                backgroundImage: `url(${\n                  currentTrack\n                    ? currentTrack.fields.featuredImage.fields.file.url\n                    : null\n                })`\n              }}\n            />\n            <div className='playback_info'>\n              <div className='title'>\n                {currentTrack ? currentTrack.fields.title : null}\n              </div>\n              <div className='artist'>Pye Luis</div>\n            </div>\n            <div className='playback_btn_wrapper'>\n            <BackIcon />\n              <div className='btn-switch'>\n              {this.state.playing ? (\n                <PauseIcon onClick={this.pause} />\n              ) : (\n                <PlayIcon onClick={this.playCurrentTrack} />\n              )}\n\n                \n              </div>\n              <NextIcon />\n            </div>\n            <div className='playback_timeline'>\n              <div className='playback_timeline_start-time'>{this.formatTime(this.time.time)}</div>\n              <div className='playback_timeline_slider'>\n                <div className='slider_base' />\n                <div className='slider_progress' />\n                <div className='slider_handle' />\n              </div>\n              <div className='playback_timeline_end-time'>{this.formatTime(\n              Math.round(this.state.currentTrack.sound.duration())\n            )}`</div>\n            </div>\n          </div>\n          <div className='list_wrapper'>\n            <ul className='list'>\n              {this.props.songs.map((song, i) => (\n                <li className='list_item selected' key={i}>\n                  <div\n                    className='thumb'\n                    style={{\n                      backgroundImage: `url(${\n                        song.fields.featuredImage.fields.file.url\n                      })`\n                    }}\n                  />\n                  <div className='info'>\n                    <div className='title'>{song.fields.title}</div>\n                    <div className='artist'>Pye Luis</div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default MusicPlayer\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AACA;AAEA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AAxBA;AAyBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AAGA;AADA;AAIA;AACA;AAAA;AACA;AACA;AATA;AAaA;AACA;AA/CA;AAiDA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AApDA;AAqDA;AAAA;AAAA;AAAA;AACA;AACA;AAvDA;AAiGA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAxGA;AACA;AADA;AACA;AADA;AA2GA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAhHA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAEA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;;;AAoqBA;;;;AA/NA;AACA;AAiOA;;;;A","sourceRoot":""}